{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ThreadService {\n  constructor(_http) {\n    this._http = _http;\n    this.apiUrl = 'api/thread';\n  }\n}\nThreadService.ɵfac = function ThreadService_Factory(t) {\n  return new (t || ThreadService)(i0.ɵɵinject(i1.HttpClient));\n};\nThreadService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ThreadService,\n  factory: ThreadService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,aAAa;EAExBC,YAAoBC,KAAiB;IAAjB,UAAK,GAALA,KAAK;IADjB,WAAM,GAAG,YAAY;EACY;;AAF9BF,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAG,SAAbH,aAAa;EAAAI,YAHZ;AAAM","names":["ThreadService","constructor","_http","factory","providedIn"],"sourceRoot":"","sources":["D:\\VisualStudio\\source\\repos\\AngularBevgobs\\AngularBevgobs\\ClientApp\\src\\app\\thread\\thread.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { IThread } from './thread';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ThreadService {\r\n  private apiUrl = 'api/thread';\r\n  constructor(private _http: HttpClient) { }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}