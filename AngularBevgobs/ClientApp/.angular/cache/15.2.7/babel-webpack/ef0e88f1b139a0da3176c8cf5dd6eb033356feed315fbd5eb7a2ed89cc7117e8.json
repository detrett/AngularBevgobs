{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/authentication.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.errorMessage, \" \");\n  }\n}\nexport class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.loginData = {\n      email: '',\n      password: ''\n    };\n    this.errorMessage = '';\n  }\n  onLogin() {\n    this.authService.login(this.loginData.email, this.loginData.password).subscribe({\n      next: data => {\n        console.log('Login response:', data);\n        if (data && data.token) {\n          this.authService.storeAuthToken(data.token);\n          if (data.userId) {\n            localStorage.setItem('userId', data.userId.toString());\n          } else {\n            console.error('Login response does not contain userId');\n          }\n          this.router.navigate(['/']);\n        } else {\n          this.errorMessage = 'Login failed: Invalid response from the server';\n        }\n      },\n      error: error => {\n        this.handleError(error);\n      }\n    });\n  }\n  handleError(error) {\n    if (error.status === 400) {\n      const errorResponse = error.error;\n      if (errorResponse && errorResponse.message) {\n        this.errorMessage = errorResponse.message;\n      } else {\n        this.errorMessage = 'An unexpected error occurred. Please try again later';\n      }\n    } else {\n      this.errorMessage = 'Invalid email or password';\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 26,\n  vars: 4,\n  consts: [[2, \"display\", \"flex\", \"justify-content\", \"center\", \"align-items\", \"center\", \"min-height\", \"100vh\", \"padding\", \"20px\"], [1, \"register-card\", 2, \"max-width\", \"2000px\", \"margin\", \"auto\", \"width\", \"100%\"], [1, \"row\", \"d-flex\", \"justify-content-center\", \"col-12\", \"mb-5\"], [1, \"col-5\", \"border-pink\", \"rounded\", \"m-20\", \"background-light\", \"card\", \"pb-2\"], [3, \"ngSubmit\"], [\"loginForm\", \"ngForm\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"h3\", \"mb-3\", \"mt-4\", \"std-color\"], [1, \"form-floating\", \"mb-2\"], [\"type\", \"email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", \"custom-form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-label\", \"custom-form-label\"], [1, \"fa-regular\", \"fa-envelope\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", \"custom-form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"fa-solid\", \"fa-key\"], [\"class\", \"error-message\", 4, \"ngIf\"], [1, \"d-flex\"], [\"type\", \"submit\", 1, \"mb-3\", \"login-purple-btn\", \"m-auto\", 3, \"disabled\"], [1, \"error-message\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"section\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"form\", 4, 5);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.onLogin();\n      });\n      i0.ɵɵelementStart(6, \"div\", 6)(7, \"h1\", 7);\n      i0.ɵɵtext(8, \"Sign in\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(9, \"hr\");\n      i0.ɵɵelementStart(10, \"div\", 8)(11, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.loginData.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"label\", 10);\n      i0.ɵɵelement(13, \"i\", 11);\n      i0.ɵɵelementStart(14, \"span\");\n      i0.ɵɵtext(15, \"E-mail\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"div\", 8)(17, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.loginData.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"label\", 10);\n      i0.ɵɵelement(19, \"i\", 13);\n      i0.ɵɵelementStart(20, \"span\");\n      i0.ɵɵtext(21, \"Password\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(22, LoginComponent_div_22_Template, 2, 1, \"div\", 14);\n      i0.ɵɵelementStart(23, \"div\", 15)(24, \"button\", 16);\n      i0.ɵɵtext(25, \"Log in\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(5);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngModel\", ctx.loginData.email);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.loginData.password);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !_r0.valid);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IA8BUA,+BAAgD;IAC9CA,YACF;IAAAA,iBAAM;;;;IADJA,eACF;IADEA,oDACF;;;ACvBV,OAAM,MAAOC,cAAc;EAQzBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;IAP5D,cAAS,GAAG;MACVC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;KACX;IAED,iBAAY,GAAW,EAAE;EAGzB;EAEAC,OAAO;IACL,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC,IAAI,CAACC,SAAS,CAACJ,KAAK,EAAE,IAAI,CAACI,SAAS,CAACH,QAAQ,CAAC,CAACI,SAAS,CAAC;MAC9EC,IAAI,EAAGC,IAAI,IAAI;QACbC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,IAAI,CAAC;QACpC,IAAIA,IAAI,IAAIA,IAAI,CAACG,KAAK,EAAE;UACtB,IAAI,CAACZ,WAAW,CAACa,cAAc,CAACJ,IAAI,CAACG,KAAK,CAAC;UAC3C,IAAIH,IAAI,CAACK,MAAM,EAAE;YACfC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEP,IAAI,CAACK,MAAM,CAACG,QAAQ,EAAE,CAAC;WACvD,MAAM;YACLP,OAAO,CAACQ,KAAK,CAAC,wCAAwC,CAAC;;UAEzD,IAAI,CAACjB,MAAM,CAACkB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;SAC5B,MAAM;UACL,IAAI,CAACC,YAAY,GAAG,gDAAgD;;MAExE,CAAC;MACDF,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACG,WAAW,CAACH,KAAK,CAAC;MACzB;KACD,CAAC;EACJ;EAGQG,WAAW,CAACH,KAAU;IAC5B,IAAIA,KAAK,CAACI,MAAM,KAAK,GAAG,EAAE;MACxB,MAAMC,aAAa,GAAGL,KAAK,CAACA,KAAK;MACjC,IAAIK,aAAa,IAAIA,aAAa,CAACC,OAAO,EAAE;QAC1C,IAAI,CAACJ,YAAY,GAAGG,aAAa,CAACC,OAAO;OAC1C,MAAM;QACL,IAAI,CAACJ,YAAY,GAAG,sDAAsD;;KAE7E,MAAM;MACL,IAAI,CAACA,YAAY,GAAG,2BAA2B;;EAEnD;;AA7CWtB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT3BhC,8BAA4G;MAI1EA;QAAA,OAAYiC,aAAS;MAAA,EAAC;MAE9CjC,8BAA2C;MACNA,uBAAO;MAAAA,iBAAK;MAGjDA,qBAAM;MAENA,+BAAgC;MAEvBA;QAAA;MAAA,EAA6B;MADpCA,iBAC2D;MAC3DA,kCAA4C;MAC1CA,yBAAsC;MACtCA,6BAAM;MAAAA,uBAAM;MAAAA,iBAAO;MAIvBA,+BAAgC;MAEvBA;QAAA;MAAA,EAAgC;MADvCA,iBACiE;MACjEA,kCAA4C;MAC1CA,yBAA+B;MAC/BA,6BAAM;MAAAA,yBAAQ;MAAAA,iBAAO;MAIzBA,kEAEM;MAGNA,gCAAoB;MACuEA,uBAAM;MAAAA,iBAAS;;;;MAtBjGA,gBAA6B;MAA7BA,6CAA6B;MAS7BA,eAAgC;MAAhCA,gDAAgC;MAOnCA,eAAkB;MAAlBA,uCAAkB;MAMqCA,eAA6B;MAA7BA,qCAA6B","names":["i0","LoginComponent","constructor","authService","router","email","password","onLogin","login","loginData","subscribe","next","data","console","log","token","storeAuthToken","userId","localStorage","setItem","toString","error","navigate","errorMessage","handleError","status","errorResponse","message","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\VisualStudio\\source\\repos\\AngularBevgobs\\AngularBevgobs\\ClientApp\\src\\app\\login\\login.component.html","D:\\VisualStudio\\source\\repos\\AngularBevgobs\\AngularBevgobs\\ClientApp\\src\\app\\login\\login.component.ts"],"sourcesContent":["<div style=\"display: flex; justify-content: center; align-items: center; min-height: 100vh; padding: 20px;\">\r\n  <section class=\"register-card\" style=\"max-width: 2000px; margin: auto; width: 100%;\">\r\n    <div class=\"row d-flex justify-content-center col-12 mb-5\">\r\n      <div class=\"col-5 border-pink rounded m-20 background-light card pb-2\">\r\n        <form #loginForm=\"ngForm\" (ngSubmit)=\"onLogin()\">\r\n\r\n          <div class=\"d-flex justify-content-center\">\r\n            <h1 class=\"h3 mb-3 mt-4 std-color\">Sign in</h1>\r\n          </div>\r\n\r\n          <hr />\r\n\r\n          <div class=\"form-floating mb-2\">\r\n            <input type=\"email\" class=\"form-control custom-form-control\"\r\n                   [(ngModel)]=\"loginData.email\" name=\"email\" required>\r\n            <label class=\"form-label custom-form-label\">\r\n              <i class=\"fa-regular fa-envelope\"></i>\r\n              <span>E-mail</span>\r\n            </label>\r\n          </div>\r\n\r\n          <div class=\"form-floating mb-2\">\r\n            <input type=\"password\" class=\"form-control custom-form-control\"\r\n                   [(ngModel)]=\"loginData.password\" name=\"password\" required>\r\n            <label class=\"form-label custom-form-label\">\r\n              <i class=\"fa-solid fa-key\"></i>\r\n              <span>Password</span>\r\n            </label>\r\n          </div>\r\n\r\n          <div *ngIf=\"errorMessage\" class=\"error-message\">\r\n            {{ errorMessage }}\r\n          </div>\r\n\r\n\r\n          <div class=\"d-flex\">\r\n            <button type=\"submit\" class=\"mb-3 login-purple-btn m-auto\" [disabled]=\"!loginForm.valid\">Log in</button>\r\n          </div>\r\n\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n  loginData = {\r\n    email: '',\r\n    password: ''\r\n  };\r\n\r\n  errorMessage: string = '';\r\n\r\n  constructor(private authService: AuthService, private router: Router) {\r\n  }\r\n\r\n  onLogin() {\r\n    this.authService.login(this.loginData.email, this.loginData.password).subscribe({\r\n      next: (data) => {\r\n        console.log('Login response:', data);\r\n        if (data && data.token) {\r\n          this.authService.storeAuthToken(data.token);\r\n          if (data.userId) {\r\n            localStorage.setItem('userId', data.userId.toString());\r\n          } else {\r\n            console.error('Login response does not contain userId');\r\n          }\r\n          this.router.navigate(['/']);\r\n        } else {\r\n          this.errorMessage = 'Login failed: Invalid response from the server';\r\n        }\r\n      },\r\n      error: (error) => {\r\n        this.handleError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  private handleError(error: any) {\r\n    if (error.status === 400) {\r\n      const errorResponse = error.error;\r\n      if (errorResponse && errorResponse.message) {\r\n        this.errorMessage = errorResponse.message;\r\n      } else {\r\n        this.errorMessage = 'An unexpected error occurred. Please try again later';\r\n      }\r\n    } else {\r\n      this.errorMessage = 'Invalid email or password';\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}