{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ThreadService {\n  constructor(_http) {\n    this._http = _http;\n    this.apiUrl = 'api/thread';\n  }\n  getThreads() {\n    console.log(\"Thread Service: getSubforums()\");\n    return this._http.get(this.apiUrl);\n  }\n  getThreadById(id) {\n    console.log(\"Thread Service: getThreadById(), id: \" + id);\n    return this._http.get(this.apiUrl + `/${id}`);\n  }\n  createThread(newThread) {\n    const createUrl = 'api/thread/create';\n    return this._http.post(createUrl, newThread);\n  }\n}\nThreadService.ɵfac = function ThreadService_Factory(t) {\n  return new (t || ThreadService)(i0.ɵɵinject(i1.HttpClient));\n};\nThreadService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ThreadService,\n  factory: ThreadService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,aAAa;EAExBC,YAAoBC,KAAiB;IAAjB,UAAK,GAALA,KAAK;IADjB,WAAM,GAAG,YAAY;EACY;EAEzCC,UAAU;IACRC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC7C,OAAO,IAAI,CAACH,KAAK,CAACI,GAAG,CAAY,IAAI,CAACC,MAAM,CAAC;EAC/C;EAEAC,aAAa,CAACC,EAAU;IACtBL,OAAO,CAACC,GAAG,CAAC,uCAAuC,GAAGI,EAAE,CAAC;IACzD,OAAO,IAAI,CAACP,KAAK,CAACI,GAAG,CAAU,IAAI,CAACC,MAAM,GAAG,IAAIE,EAAE,EAAE,CAAC;EACxD;EAEAC,YAAY,CAACC,SAAkB;IAC7B,MAAMC,SAAS,GAAG,mBAAmB;IACrC,OAAO,IAAI,CAACV,KAAK,CAACW,IAAI,CAAMD,SAAS,EAAED,SAAS,CAAC;EACnD;;AAjBWX,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAc,SAAbd,aAAa;EAAAe,YAHZ;AAAM","names":["ThreadService","constructor","_http","getThreads","console","log","get","apiUrl","getThreadById","id","createThread","newThread","createUrl","post","factory","providedIn"],"sourceRoot":"","sources":["D:\\VisualStudio\\source\\repos\\AngularBevgobs\\AngularBevgobs\\ClientApp\\src\\app\\thread\\thread.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { IThread } from './thread';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ThreadService {\r\n  private apiUrl = 'api/thread';\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getThreads(): Observable<IThread[]> {\r\n    console.log(\"Thread Service: getSubforums()\");\r\n    return this._http.get<IThread[]>(this.apiUrl);\r\n  }\r\n\r\n  getThreadById(id: number): Observable<IThread> {\r\n    console.log(\"Thread Service: getThreadById(), id: \" + id);\r\n    return this._http.get<IThread>(this.apiUrl + `/${id}`)\r\n  }\r\n\r\n  createThread(newThread: IThread): Observable<any> {\r\n    const createUrl = 'api/thread/create';\r\n    return this._http.post<any>(createUrl, newThread);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}