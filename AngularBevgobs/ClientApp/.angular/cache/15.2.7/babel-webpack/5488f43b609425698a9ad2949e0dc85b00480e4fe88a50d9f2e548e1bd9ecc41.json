{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet SubforumContainerComponent = class SubforumContainerComponent {\n  constructor(_route, _router, _subforumService) {\n    this._route = _route;\n    this._router = _router;\n    this._subforumService = _subforumService;\n    this.subforum = null;\n    this.currentPage = 1;\n    this.pageSize = 10;\n    this.totalPages = 1;\n    this.pageNumbers = [];\n    this.lastPageIndex = 1;\n    this.orderedThreads = [];\n  }\n  calculatePages() {\n    console.log(\"Subforum Container Component: calculatePages()\");\n    let threadNumber = this.subforum?.Threads.length;\n    if (threadNumber != null && threadNumber > 0) {\n      this.totalPages = Math.ceil(threadNumber / 10);\n      for (let i = 1; i <= this.totalPages; i++) {\n        this.pageNumbers.push(i);\n      }\n    } else {\n      console.log(\"Error calculating pages, this subforum's thread count is either null or 0\");\n    }\n  }\n  getSubforumData(id) {\n    console.log(\"Subforum Container Component: getSubforumData()\");\n    this._subforumService.getSubforumById(+id).subscribe(data => {\n      this.subforum = data;\n      console.log(\"Subforum Name: \" + this.subforum?.Name);\n      console.log(\"Total threads: \" + this.subforum?.Threads.length);\n      this.calculatePages();\n      this.orderThreads();\n    }, error => {\n      console.error('Error fetching subforum:', error);\n      this._router.navigate(['/']);\n    });\n  }\n  // By ChatGPT\n  orderThreads() {\n    console.log(\"Subforum Container Component: orderThreads()\");\n    if (this.subforum?.Threads != undefined) {\n      this.orderedThreads = this.subforum?.Threads.sort((a, b) => {\n        const lastCommentA = a.Comments && a.Comments.length > 0 ? a.Comments.reduce((max, comment) => comment.CreatedAt > max.CreatedAt ? comment : max, a.Comments[0]).CreatedAt : new Date(0);\n        const lastCommentB = b.Comments && b.Comments.length > 0 ? b.Comments.reduce((max, comment) => comment.CreatedAt > max.CreatedAt ? comment : max, b.Comments[0]).CreatedAt : new Date(0);\n        return lastCommentB.getTime() - lastCommentA.getTime();\n      });\n    } else {\n      console.log(\"Error fetching subforum Threads\");\n    }\n  }\n  getThreadsForCurrentPage() {\n    console.log(\"Subforum Container Component: getThreadsForCurrentPage()\");\n    const startIndex = (this.currentPage - 1) * this.pageSize;\n    return this.orderedThreads.slice(startIndex, startIndex + this.pageSize);\n  }\n  ngOnInit() {\n    console.log(\"Subforum Container Component: ngOnInit()\");\n    this._route.paramMap.subscribe(params => {\n      const id = params.get('id');\n      if (id != null) {\n        this.getSubforumData(+id);\n      } else {\n        console.error('Error fetching id');\n        this._router.navigate(['/']);\n      }\n    });\n  }\n};\nSubforumContainerComponent = __decorate([Component({\n  selector: 'app-subforum-container',\n  templateUrl: './subforum-container.component.html',\n  styleUrls: ['./subforum-container.component.css']\n})], SubforumContainerComponent);\nexport { SubforumContainerComponent };","map":{"version":3,"mappings":"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","names":["Component","SubforumContainerComponent","constructor","_route","_router","_subforumService","calculatePages","console","log","threadNumber","subforum","Threads","length","totalPages","Math","ceil","i","pageNumbers","push","getSubforumData","id","getSubforumById","subscribe","data","Name","orderThreads","error","navigate","undefined","orderedThreads","sort","a","b","lastCommentA","Comments","reduce","max","comment","CreatedAt","Date","lastCommentB","getTime","getThreadsForCurrentPage","startIndex","currentPage","pageSize","slice","ngOnInit","paramMap","params","get","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\VisualStudio\\source\\repos\\AngularBevgobs\\AngularBevgobs\\ClientApp\\src\\app\\subforum\\subforum-container.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ISubforum } from './subforum';\r\nimport { IThread } from '../thread/thread';\r\nimport { SubforumService } from './subforum.service';\r\n\r\n@Component({\r\n  selector: 'app-subforum-container',\r\n  templateUrl: './subforum-container.component.html',\r\n  styleUrls: ['./subforum-container.component.css']\r\n})\r\n\r\nexport class SubforumContainerComponent implements OnInit {\r\n  subforum: ISubforum | null = null;\r\n  currentPage = 1;\r\n  pageSize = 10;\r\n  totalPages = 1;\r\n  pageNumbers: number[] = [];\r\n  lastPageIndex = 1;\r\n  orderedThreads: IThread[] = [];\r\n\r\n  constructor(\r\n    private _route: ActivatedRoute,\r\n    private _router: Router,  \r\n    private _subforumService: SubforumService) { }\r\n\r\n  calculatePages(): void {\r\n    console.log(\"Subforum Container Component: calculatePages()\");\r\n    let threadNumber = this.subforum?.Threads.length;\r\n    if (threadNumber != null && threadNumber > 0) {\r\n      this.totalPages = Math.ceil(threadNumber / 10);\r\n      for (let i = 1; i <= this.totalPages; i++) {\r\n        this.pageNumbers.push(i);\r\n      }\r\n    }\r\n    else {\r\n      console.log(\"Error calculating pages, this subforum's thread count is either null or 0\");\r\n    }\r\n  }\r\n\r\n  getSubforumData(id: number): void {\r\n    console.log(\"Subforum Container Component: getSubforumData()\");\r\n    this._subforumService.getSubforumById(+id).subscribe(\r\n      data => {\r\n        this.subforum = data;\r\n        console.log(\"Subforum Name: \" + this.subforum?.Name);\r\n        console.log(\"Total threads: \" + this.subforum?.Threads.length);\r\n        this.calculatePages();\r\n\r\n        this.orderThreads();\r\n      },\r\n      error => {\r\n        console.error('Error fetching subforum:', error);\r\n        this._router.navigate(['/']);\r\n      }\r\n    );\r\n  }\r\n\r\n  // By ChatGPT\r\n  orderThreads(): void {\r\n    console.log(\"Subforum Container Component: orderThreads()\");\r\n    if (this.subforum?.Threads != undefined) {\r\n      this.orderedThreads = this.subforum?.Threads.sort((a, b) => {\r\n        const lastCommentA = a.Comments && a.Comments.length > 0 ? a.Comments.reduce((max, comment) => comment.CreatedAt > max.CreatedAt ? comment : max, a.Comments[0]).CreatedAt : new Date(0);\r\n        const lastCommentB = b.Comments && b.Comments.length > 0 ? b.Comments.reduce((max, comment) => comment.CreatedAt > max.CreatedAt ? comment : max, b.Comments[0]).CreatedAt : new Date(0);\r\n        return lastCommentB.getTime() - lastCommentA.getTime();\r\n      });\r\n    } else {\r\n      console.log(\"Error fetching subforum Threads\");\r\n    }\r\n  }\r\n\r\n  getThreadsForCurrentPage(): IThread[] {\r\n    console.log(\"Subforum Container Component: getThreadsForCurrentPage()\");\r\n    const startIndex = (this.currentPage - 1) * this.pageSize;\r\n    return this.orderedThreads.slice(startIndex, startIndex + this.pageSize);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"Subforum Container Component: ngOnInit()\");\r\n\r\n    this._route.paramMap.subscribe(params => {\r\n      const id = params.get('id');\r\n\r\n      if (id != null) {\r\n        this.getSubforumData(+id);\r\n      } else {\r\n        console.error('Error fetching id');\r\n        this._router.navigate(['/']);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}