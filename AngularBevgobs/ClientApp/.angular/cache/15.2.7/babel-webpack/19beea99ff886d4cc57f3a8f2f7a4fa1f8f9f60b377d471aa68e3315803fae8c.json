{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./user.service\";\nexport class UserComponent {\n  constructor(userService) {\n    this.userService = userService;\n    this.users = [];\n    this.selectedUser = null;\n  }\n  ngOnInit() {\n    this.getUsers();\n  }\n  getUsers() {\n    this.userService.getAllUsers().subscribe(users => this.users = users);\n  }\n  viewDetails(userId) {\n    this.userService.getUserById(userId).subscribe(user => this.selectedUser = user);\n  }\n  createUser(user) {\n    this.userService.createUser(user).subscribe(newUser => {\n      this.users.push(newUser);\n    });\n  }\n  updateUser(user) {\n    this.userService.updateUser(user).subscribe(updatedUser => {\n      // Update logic here\n    });\n  }\n  deleteUser(userId) {\n    this.userService.deleteUser(userId).subscribe(() => {\n      this.users = this.users.filter(user => user.id !== userId);\n    });\n  }\n}\nUserComponent.ɵfac = function UserComponent_Factory(t) {\n  return new (t || UserComponent)(i0.ɵɵdirectiveInject(i1.UserService));\n};\nUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserComponent,\n  selectors: [[\"app-user\"]],\n  decls: 2,\n  vars: 0,\n  template: function UserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"user works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,aAAa;EAIxBC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAH/B,UAAK,GAAsB,EAAE;IAC7B,iBAAY,GAA2B,IAAI;EAEI;EAE/CC,QAAQ;IACN,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEAA,QAAQ;IACN,IAAI,CAACF,WAAW,CAACG,WAAW,EAAE,CAACC,SAAS,CAACC,KAAK,IAAI,IAAI,CAACA,KAAK,GAAGA,KAAK,CAAC;EACvE;EAEAC,WAAW,CAACC,MAAc;IACxB,IAAI,CAACP,WAAW,CAACQ,WAAW,CAACD,MAAM,CAAC,CAACH,SAAS,CAACK,IAAI,IAAI,IAAI,CAACC,YAAY,GAAGD,IAAI,CAAC;EAClF;EAEAE,UAAU,CAACF,IAAqB;IAC9B,IAAI,CAACT,WAAW,CAACW,UAAU,CAACF,IAAI,CAAC,CAACL,SAAS,CAACQ,OAAO,IAAG;MACpD,IAAI,CAACP,KAAK,CAACQ,IAAI,CAACD,OAAO,CAAC;IAC1B,CAAC,CAAC;EACJ;EAEAE,UAAU,CAACL,IAAqB;IAC9B,IAAI,CAACT,WAAW,CAACc,UAAU,CAACL,IAAI,CAAC,CAACL,SAAS,CAACW,WAAW,IAAG;MACxD;IAAA,CACD,CAAC;EACJ;EAEAC,UAAU,CAACT,MAAc;IACvB,IAAI,CAACP,WAAW,CAACgB,UAAU,CAACT,MAAM,CAAC,CAACH,SAAS,CAAC,MAAK;MACjD,IAAI,CAACC,KAAK,GAAG,IAAI,CAACA,KAAK,CAACY,MAAM,CAACR,IAAI,IAAIA,IAAI,CAACS,EAAE,KAAKX,MAAM,CAAC;IAC5D,CAAC,CAAC;EACJ;;AAlCWT,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAqB;EAAAC;EAAAC;EAAAC;IAAA;MCT1BC,yBAAG;MAAAA,2BAAW;MAAAA,iBAAI","names":["UserComponent","constructor","userService","ngOnInit","getUsers","getAllUsers","subscribe","users","viewDetails","userId","getUserById","user","selectedUser","createUser","newUser","push","updateUser","updatedUser","deleteUser","filter","id","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["/Users/brageeilertsen/RiderProjects/AngularBevgobs/AngularBevgobs/ClientApp/src/app/components/user/user.component.ts","/Users/brageeilertsen/RiderProjects/AngularBevgobs/AngularBevgobs/ClientApp/src/app/components/user/user.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserService } from './user.service'; // Adjust the path as per your project structure\nimport { ApplicationUser } from 'src/Models/ApplicationUser';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n  users: ApplicationUser[] = [];\n  selectedUser: ApplicationUser | null = null;\n\n  constructor(private userService: UserService) {}\n\n  ngOnInit(): void {\n    this.getUsers();\n  }\n\n  getUsers(): void {\n    this.userService.getAllUsers().subscribe(users => this.users = users);\n  }\n\n  viewDetails(userId: number): void {\n    this.userService.getUserById(userId).subscribe(user => this.selectedUser = user);\n  }\n\n  createUser(user: ApplicationUser): void {\n    this.userService.createUser(user).subscribe(newUser => {\n      this.users.push(newUser);\n    });\n  }\n\n  updateUser(user: ApplicationUser): void {\n    this.userService.updateUser(user).subscribe(updatedUser => {\n      // Update logic here\n    });\n  }\n\n  deleteUser(userId: number): void {\n    this.userService.deleteUser(userId).subscribe(() => {\n      this.users = this.users.filter(user => user.id !== userId);\n    });\n  }\n}\n","<p>user works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}