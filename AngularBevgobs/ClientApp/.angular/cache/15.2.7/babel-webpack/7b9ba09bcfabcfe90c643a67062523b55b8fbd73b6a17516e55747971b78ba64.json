{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet RegistrationComponent = class RegistrationComponent {\n  constructor(http) {\n    this.http = http;\n    this.email = '';\n    this.password = '';\n  }\n  onSubmit() {\n    const registrationData = {\n      email: this.email,\n      password: this.password\n    };\n    this.http.post('/api/register', registrationData).subscribe(response => {\n      // Handle successful registration, e.g., show a success message or redirect.\n    }, error => {\n      // Handle registration error, e.g., display an error message.\n    });\n  }\n};\nRegistrationComponent = __decorate([Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html'\n})], RegistrationComponent);\nexport { RegistrationComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,IAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAIhCC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHxB,UAAK,GAAW,EAAE;IAClB,aAAQ,GAAW,EAAE;EAEkB;EAEvCC,QAAQ;IACN,MAAMC,gBAAgB,GAAG;MAAEC,KAAK,EAAE,IAAI,CAACA,KAAK;MAAEC,QAAQ,EAAE,IAAI,CAACA;IAAQ,CAAE;IACvE,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC,eAAe,EAAEH,gBAAgB,CAAC,CAACI,SAAS,CACxDC,QAAQ,IAAI;MACX;IAAA,CACD,EACAC,KAAK,IAAI;MACR;IAAA,CACD,CACF;EACH;CACD;AAjBYV,qBAAqB,eAJjCD,SAAS,CAAC;EACTY,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE;CACd,CAAC,GACWZ,qBAAqB,CAiBjC;SAjBYA,qBAAqB","names":["Component","RegistrationComponent","constructor","http","onSubmit","registrationData","email","password","post","subscribe","response","error","selector","templateUrl"],"sourceRoot":"","sources":["/Users/brageeilertsen/RiderProjects/AngularBevgobs/AngularBevgobs/ClientApp/src/app/auth/registration/registrer.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n})\nexport class RegistrationComponent {\n  email: string = '';\n  password: string = '';\n\n  constructor(private http: HttpClient) {}\n\n  onSubmit() {\n    const registrationData = { email: this.email, password: this.password };\n    this.http.post('/api/register', registrationData).subscribe(\n      (response) => {\n        // Handle successful registration, e.g., show a success message or redirect.\n      },\n      (error) => {\n        // Handle registration error, e.g., display an error message.\n      }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}