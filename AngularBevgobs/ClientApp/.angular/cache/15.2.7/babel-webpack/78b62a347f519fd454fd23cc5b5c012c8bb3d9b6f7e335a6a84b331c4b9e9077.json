{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nlet ThreadComponent = class ThreadComponent {\n  constructor(_router, _subforumService) {\n    this._router = _router;\n    this._subforumService = _subforumService;\n  }\n  findLastComment() {\n    console.log(\"Thread Component: findLastComment()\");\n    if (this.thread?.Comments && this.thread?.Comments.length > 0) {\n      let tempLastComment = this.thread.Comments[this.thread.Comments.length - 1];\n      if (tempLastComment) {\n        if (!this.lastComment || this.lastComment.CreatedAt > tempLastComment.CreatedAt) {\n          this.lastComment = tempLastComment;\n        }\n      }\n    }\n    console.log(\"Last comment ID: \" + this.lastComment?.CommentId);\n  }\n  getFormattedDate() {\n    console.log(\"Thread Component: getFormattedDate()\");\n    console.log(\"Last comment ID: \" + this.lastComment?.CreatedAt);\n    if (!this.lastComment?.CreatedAt) {\n      return \"Undefined date\";\n    } else {\n      const createdDate = new Date(this.lastComment.CreatedAt);\n      const now = new Date();\n      const ts = now.getTime() - createdDate.getTime();\n      const minutes = Math.floor(ts / 60000);\n      const hours = Math.floor(ts / 3600000);\n      const days = Math.floor(ts / (3600000 * 24));\n      if (minutes < 2) return '1 minute ago';\n      if (hours < 1) return `${minutes} minutes ago`;\n      if (days < 1) return hours >= 2 ? `${hours} hours ago` : '1 hour ago';\n      if (days < 2) return 'yesterday';\n      if (days < 5) return `on ${createdDate.getDay()}`;\n      return `on ${createdDate.toLocaleDateString()}`;\n    }\n  }\n  ngOnInit() {\n    console.log(\"Thread Component: ngOnInit()\");\n    console.log(\"Thread Name: \" + this.thread?.Name);\n    this.findLastComment();\n  }\n};\n__decorate([Input()], ThreadComponent.prototype, \"thread\", void 0);\nThreadComponent = __decorate([Component({\n  selector: 'app-thread',\n  templateUrl: './thread.component.html',\n  styleUrls: ['./thread.component.css']\n})], ThreadComponent);\nexport { ThreadComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAUC,KAAK,QAAQ,eAAe;AAYjD,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAI1BC,YACUC,OAAe,EACfC,gBAA+B;IAD/B,YAAO,GAAPD,OAAO;IACP,qBAAgB,GAAhBC,gBAAgB;EAAmB;EAE7CC,eAAe;IACbC,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;IAElD,IAAI,IAAI,CAACC,MAAM,EAAEC,QAAQ,IAAK,IAAI,CAACD,MAAM,EAAEC,QAAQ,CAACC,MAAM,GAAG,CAAE,EAC/D;MACE,IAAIC,eAAe,GAAG,IAAI,CAACH,MAAM,CAACC,QAAQ,CAAC,IAAI,CAACD,MAAM,CAACC,QAAQ,CAACC,MAAM,GAAG,CAAC,CAAC;MAE3E,IAAIC,eAAe,EACnB;QACE,IAAI,CAAC,IAAI,CAACC,WAAW,IAAI,IAAI,CAACA,WAAW,CAACC,SAAS,GAAGF,eAAe,CAACE,SAAS,EAAE;UAC/E,IAAI,CAACD,WAAW,GAAGD,eAAe;;;;IAMxCL,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAAG,IAAI,CAACK,WAAW,EAAEE,SAAS,CAAC;EAChE;EAEAC,gBAAgB;IAEdT,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;IACnDD,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAAG,IAAI,CAACK,WAAW,EAAEC,SAAS,CAAC;IAE9D,IAAI,CAAC,IAAI,CAACD,WAAW,EAAEC,SAAS,EAAE;MAChC,OAAO,gBAAgB;KACxB,MAAM;MACL,MAAMG,WAAW,GAAG,IAAIC,IAAI,CAAC,IAAI,CAACL,WAAW,CAACC,SAAS,CAAC;MAExD,MAAMK,GAAG,GAAG,IAAID,IAAI,EAAE;MACtB,MAAME,EAAE,GAAGD,GAAG,CAACE,OAAO,EAAE,GAAGJ,WAAW,CAACI,OAAO,EAAE;MAChD,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACJ,EAAE,GAAG,KAAK,CAAC;MACtC,MAAMK,KAAK,GAAGF,IAAI,CAACC,KAAK,CAACJ,EAAE,GAAG,OAAO,CAAC;MACtC,MAAMM,IAAI,GAAGH,IAAI,CAACC,KAAK,CAACJ,EAAE,IAAI,OAAO,GAAG,EAAE,CAAC,CAAC;MAE5C,IAAIE,OAAO,GAAG,CAAC,EAAE,OAAO,cAAc;MACtC,IAAIG,KAAK,GAAG,CAAC,EAAE,OAAO,GAAGH,OAAO,cAAc;MAC9C,IAAII,IAAI,GAAG,CAAC,EAAE,OAAOD,KAAK,IAAI,CAAC,GAAG,GAAGA,KAAK,YAAY,GAAG,YAAY;MACrE,IAAIC,IAAI,GAAG,CAAC,EAAE,OAAO,WAAW;MAChC,IAAIA,IAAI,GAAG,CAAC,EAAE,OAAO,MAAMT,WAAW,CAACU,MAAM,EAAE,EAAE;MACjD,OAAO,MAAMV,WAAW,CAACW,kBAAkB,EAAE,EAAE;;EAEnD;EAGAC,QAAQ;IACNtB,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC3CD,OAAO,CAACC,GAAG,CAAC,eAAe,GAAG,IAAI,CAACC,MAAM,EAAEqB,IAAI,CAAC;IAEhD,IAAI,CAACxB,eAAe,EAAE;EACxB;CACD;AA1DUyB,YAAR9B,KAAK,EAAE,+CAAkB;AADfC,eAAe,eAN3BF,SAAS,CAAC;EACTgC,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,GAEWhC,eAAe,CA2D3B;SA3DYA,eAAe","names":["Component","Input","ThreadComponent","constructor","_router","_subforumService","findLastComment","console","log","thread","Comments","length","tempLastComment","lastComment","CreatedAt","CommentId","getFormattedDate","createdDate","Date","now","ts","getTime","minutes","Math","floor","hours","days","getDay","toLocaleDateString","ngOnInit","Name","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\VisualStudio\\source\\repos\\AngularBevgobs\\AngularBevgobs\\ClientApp\\src\\app\\thread\\thread.component.ts"],"sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\r\nimport { IThread } from './thread';\r\nimport { IComment } from '../comment/comment';\r\nimport { Router } from '@angular/router';\r\nimport { ThreadService } from './thread.service';\r\n\r\n@Component({\r\n  selector: 'app-thread',\r\n  templateUrl: './thread.component.html',\r\n  styleUrls: ['./thread.component.css']\r\n})\r\n\r\nexport class ThreadComponent implements OnInit {\r\n  @Input() thread?: IThread;\r\n  lastComment?: IComment;\r\n\r\n  constructor(\r\n    private _router: Router,\r\n    private _subforumService: ThreadService) { }\r\n\r\n  findLastComment(): void {\r\n    console.log(\"Thread Component: findLastComment()\");\r\n\r\n    if (this.thread?.Comments && (this.thread?.Comments.length > 0))\r\n    {\r\n      let tempLastComment = this.thread.Comments[this.thread.Comments.length - 1];\r\n\r\n      if (tempLastComment)\r\n      {\r\n        if (!this.lastComment || this.lastComment.CreatedAt > tempLastComment.CreatedAt) {\r\n          this.lastComment = tempLastComment;\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    console.log(\"Last comment ID: \" + this.lastComment?.CommentId);\r\n  }\r\n\r\n  getFormattedDate(): string {\r\n\r\n    console.log(\"Thread Component: getFormattedDate()\");\r\n    console.log(\"Last comment ID: \" + this.lastComment?.CreatedAt);\r\n\r\n    if (!this.lastComment?.CreatedAt) {\r\n      return \"Undefined date\"\r\n    } else {\r\n      const createdDate = new Date(this.lastComment.CreatedAt);\r\n\r\n      const now = new Date();\r\n      const ts = now.getTime() - createdDate.getTime();\r\n      const minutes = Math.floor(ts / 60000);\r\n      const hours = Math.floor(ts / 3600000);\r\n      const days = Math.floor(ts / (3600000 * 24));\r\n\r\n      if (minutes < 2) return '1 minute ago';\r\n      if (hours < 1) return `${minutes} minutes ago`;\r\n      if (days < 1) return hours >= 2 ? `${hours} hours ago` : '1 hour ago';\r\n      if (days < 2) return 'yesterday';\r\n      if (days < 5) return `on ${createdDate.getDay()}`;\r\n      return `on ${createdDate.toLocaleDateString()}`;\r\n    }\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"Thread Component: ngOnInit()\");\r\n    console.log(\"Thread Name: \" + this.thread?.Name);\r\n\r\n    this.findLastComment();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}