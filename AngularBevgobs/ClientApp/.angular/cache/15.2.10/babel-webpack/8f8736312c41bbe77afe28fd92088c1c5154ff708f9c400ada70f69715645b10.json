{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class ThreadService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.baseUrl = 'http://localhost:5186/api/thread';\n    this.userBaseUrl = 'http://localhost:5186/api/user';\n  }\n  getThreads() {\n    console.log(\"Thread Service: getThreads()\");\n    return this.http.get(this.baseUrl);\n  }\n  getThreadById(id) {\n    console.log(\"Thread Service: getThreadById(), id: \" + id);\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n  deleteThread(threadId) {\n    console.log(\"Thread Service: deleteThread(), id: \" + threadId);\n    return this.http.delete(`${this.baseUrl}/${threadId}`);\n  }\n  static #_ = this.ɵfac = function ThreadService_Factory(t) {\n    return new (t || ThreadService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ThreadService,\n    factory: ThreadService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,aAAa;EAIxBC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;IAH5C,YAAO,GAAG,kCAAkC;IAC5C,gBAAW,GAAG,gCAAgC;EAEU;EAEhEC,UAAU;IACRC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC3C,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAY,IAAI,CAACC,OAAO,CAAC;EAC/C;EAEAC,aAAa,CAACC,EAAU;IACtBL,OAAO,CAACC,GAAG,CAAC,uCAAuC,GAAGI,EAAE,CAAC;IACzD,OAAO,IAAI,CAACR,IAAI,CAACK,GAAG,CAAU,GAAG,IAAI,CAACC,OAAO,IAAIE,EAAE,EAAE,CAAC;EACxD;EAEAC,YAAY,CAACC,QAAgB;IAC3BP,OAAO,CAACC,GAAG,CAAC,sCAAsC,GAAGM,QAAQ,CAAC;IAC9D,OAAO,IAAI,CAACV,IAAI,CAACW,MAAM,CAAM,GAAG,IAAI,CAACL,OAAO,IAAII,QAAQ,EAAE,CAAC;EAC7D;EAAC;qBAnBUZ,aAAa;EAAA;EAAA;WAAbA,aAAa;IAAAc,SAAbd,aAAa;IAAAe,YAFZ;EAAM","names":["ThreadService","constructor","http","router","getThreads","console","log","get","baseUrl","getThreadById","id","deleteThread","threadId","delete","factory","providedIn"],"sourceRoot":"","sources":["/Users/brageeilertsen/RiderProjects/AngularBevgobs1/AngularBevgobs/ClientApp/src/app/thread/thread.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { IThread } from './thread';\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThreadService {\n  private baseUrl = 'http://localhost:5186/api/thread';\n  private userBaseUrl = 'http://localhost:5186/api/user';\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  getThreads(): Observable<IThread[]> {\n    console.log(\"Thread Service: getThreads()\");\n    return this.http.get<IThread[]>(this.baseUrl);\n  }\n\n  getThreadById(id: number): Observable<IThread> {\n    console.log(\"Thread Service: getThreadById(), id: \" + id);\n    return this.http.get<IThread>(`${this.baseUrl}/${id}`);\n  }\n\n  deleteThread(threadId: number): Observable<any> {\n    console.log(\"Thread Service: deleteThread(), id: \" + threadId);\n    return this.http.delete<any>(`${this.baseUrl}/${threadId}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}