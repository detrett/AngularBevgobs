{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:5186/api/authenticate';\n  }\n  login(email, password) {\n    return this.http.post(`${this.baseUrl}/login`, {\n      email,\n      password\n    });\n  }\n  register(registerData) {\n    // Set the headers\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    // Make the POST request\n    return this.http.post('/api/auth/register', registerData, httpOptions);\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,YAAO,GAAG,wCAAwC;EAG1D;EAEAC,KAAK,CAACC,KAAa,EAAEC,QAAgB;IACnC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,QAAQ,EAAE;MAACH,KAAK;MAAEC;IAAQ,CAAC,CAAC;EACnE;EAEAG,QAAQ,CAACC,YAAiB;IACxB;IACA,MAAMC,WAAW,GAAG;MAClBC,OAAO,EAAE,IAAIZ,WAAW,CAAC;QACvB,cAAc,EAAE;OACjB;KACF;IAED;IACA,OAAO,IAAI,CAACG,IAAI,CAACI,IAAI,CAAC,oBAAoB,EAAEG,YAAY,EAAEC,WAAW,CAAC;EACxE;EAAC;qBApBUV,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAY,SAAXZ,WAAW;IAAAa,YAFV;EAAM","names":["HttpHeaders","AuthService","constructor","http","login","email","password","post","baseUrl","register","registerData","httpOptions","headers","factory","providedIn"],"sourceRoot":"","sources":["/Users/brageeilertsen/RiderProjects/AngularBevgobs1/AngularBevgobs/ClientApp/src/app/services/authentication.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private baseUrl = 'http://localhost:5186/api/authenticate';\n\n  constructor(private http: HttpClient) {\n  }\n\n  login(email: string, password: string): Observable<any> {\n    return this.http.post(`${this.baseUrl}/login`, {email, password});\n  }\n\n  register(registerData: any) {\n    // Set the headers\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n\n    // Make the POST request\n    return this.http.post('/api/auth/register', registerData, httpOptions);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}