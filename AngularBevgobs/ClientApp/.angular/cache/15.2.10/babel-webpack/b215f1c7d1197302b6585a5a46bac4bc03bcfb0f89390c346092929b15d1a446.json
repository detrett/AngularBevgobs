{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CommentService {\n  constructor(_http) {\n    this._http = _http;\n    this.apiUrl = 'api/comment';\n  }\n  getComments() {\n    console.log(\"Comment Service: getComments()\");\n    return this._http.get(this.apiUrl);\n  }\n  getCommentById(id) {\n    console.log(\"Comment Service: getCommentById(), id: \" + id);\n    return this._http.get(this.apiUrl + `/${id}`);\n  }\n  static #_ = this.ɵfac = function CommentService_Factory(t) {\n    return new (t || CommentService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CommentService,\n    factory: CommentService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,cAAc;EAEzBC,YAAoBC,KAAiB;IAAjB,UAAK,GAALA,KAAK;IADjB,WAAM,GAAG,aAAa;EACW;EAEzCC,WAAW;IACTC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC7C,OAAO,IAAI,CAACH,KAAK,CAACI,GAAG,CAAa,IAAI,CAACC,MAAM,CAAC;EAChD;EAEAC,cAAc,CAACC,EAAU;IACvBL,OAAO,CAACC,GAAG,CAAC,yCAAyC,GAAGI,EAAE,CAAC;IAC3D,OAAO,IAAI,CAACP,KAAK,CAACI,GAAG,CAAW,IAAI,CAACC,MAAM,GAAG,IAAIE,EAAE,EAAE,CAAC;EACzD;EAAC;qBAZUT,cAAc;EAAA;EAAA;WAAdA,cAAc;IAAAU,SAAdV,cAAc;IAAAW,YAHb;EAAM","names":["CommentService","constructor","_http","getComments","console","log","get","apiUrl","getCommentById","id","factory","providedIn"],"sourceRoot":"","sources":["/Users/brageeilertsen/RiderProjects/AngularBevgobs1/AngularBevgobs/ClientApp/src/app/comment/comment.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { IComment } from './comment';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CommentService {\n  private apiUrl = 'api/comment';\n  constructor(private _http: HttpClient) { }\n\n  getComments(): Observable<IComment[]> {\n    console.log(\"Comment Service: getComments()\");\n    return this._http.get<IComment[]>(this.apiUrl);\n  }\n\n  getCommentById(id: number): Observable<IComment> {\n    console.log(\"Comment Service: getCommentById(), id: \" + id);\n    return this._http.get<IComment>(this.apiUrl + `/${id}`)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}