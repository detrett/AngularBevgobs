{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ThreadContainerComponent = class ThreadContainerComponent {\n  constructor(_route, _router, _threadService, _authService // Inject authentication service\n  ) {\n    this._route = _route;\n    this._router = _router;\n    this._threadService = _threadService;\n    this._authService = _authService;\n    this.thread = null;\n    this.isAuthenticated = false; // Variable to track authentication status\n  }\n\n  getThreadData(id) {\n    this._threadService.getThreadById(+id).subscribe(data => {\n      this.thread = data;\n    }, error => {\n      console.error('Error fetching thread:', error);\n      this._router.navigate(['/']);\n    });\n  }\n  ngOnInit() {\n    this.isAuthenticated = this._authService.isAuthenticated(); // Check authentication status\n    this._route.paramMap.subscribe(params => {\n      const id = params.get('id');\n      if (id) {\n        this.getThreadData(+id);\n      } else {\n        console.error('Thread ID is missing');\n        this._router.navigate(['/']);\n      }\n    });\n  }\n  // Methods to handle editing and deleting the thread\n  editThread() {\n    // Implement the logic to edit the thread\n    console.log(\"Edit thread functionality goes here.\");\n  }\n  deleteThread() {\n    // Implement the logic to delete the thread\n    console.log(\"Delete thread functionality goes here.\");\n  }\n};\nThreadContainerComponent = __decorate([Component({\n  selector: 'app-thread-container',\n  templateUrl: './thread-container.component.html',\n  styleUrls: ['./thread-container.component.css']\n})], ThreadContainerComponent);\nexport { ThreadContainerComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAY1C,IAAMC,wBAAwB,GAA9B,MAAMA,wBAAwB;EAInCC,YACUC,MAAsB,EACtBC,OAAe,EACfC,cAA6B,EAC7BC,YAAmC,CAAC;EAAA;IAHpC,WAAM,GAANH,MAAM;IACN,YAAO,GAAPC,OAAO;IACP,mBAAc,GAAdC,cAAc;IACd,iBAAY,GAAZC,YAAY;IAPtB,WAAM,GAAmB,IAAI;IAC7B,oBAAe,GAAY,KAAK,CAAC,CAAC;EAO9B;;EAEJC,aAAa,CAACC,EAAU;IACtB,IAAI,CAACH,cAAc,CAACI,aAAa,CAAC,CAACD,EAAE,CAAC,CAACE,SAAS,CAC9CC,IAAI,IAAG;MACL,IAAI,CAACC,MAAM,GAAGD,IAAI;IACpB,CAAC,EACDE,KAAK,IAAG;MACNC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,IAAI,CAACT,OAAO,CAACW,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC,CACF;EACH;EAEAC,QAAQ;IACN,IAAI,CAACC,eAAe,GAAG,IAAI,CAACX,YAAY,CAACW,eAAe,EAAE,CAAC,CAAC;IAE5D,IAAI,CAACd,MAAM,CAACe,QAAQ,CAACR,SAAS,CAACS,MAAM,IAAG;MACtC,MAAMX,EAAE,GAAGW,MAAM,CAACC,GAAG,CAAC,IAAI,CAAC;MAC3B,IAAIZ,EAAE,EAAE;QACN,IAAI,CAACD,aAAa,CAAC,CAACC,EAAE,CAAC;OACxB,MAAM;QACLM,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAC;QACrC,IAAI,CAACT,OAAO,CAACW,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;;IAEhC,CAAC,CAAC;EACJ;EAEA;EACAM,UAAU;IACR;IACAP,OAAO,CAACQ,GAAG,CAAC,sCAAsC,CAAC;EACrD;EAEAC,YAAY;IACV;IACAT,OAAO,CAACQ,GAAG,CAAC,wCAAwC,CAAC;EACvD;CACD;AA/CYrB,wBAAwB,eANpCD,SAAS,CAAC;EACTwB,QAAQ,EAAE,sBAAsB;EAChCC,WAAW,EAAE,mCAAmC;EAChDC,SAAS,EAAE,CAAC,kCAAkC;CAC/C,CAAC,GAEWzB,wBAAwB,CA+CpC;SA/CYA,wBAAwB","names":["Component","ThreadContainerComponent","constructor","_route","_router","_threadService","_authService","getThreadData","id","getThreadById","subscribe","data","thread","error","console","navigate","ngOnInit","isAuthenticated","paramMap","params","get","editThread","log","deleteThread","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/brageeilertsen/RiderProjects/AngularBevgobs1/AngularBevgobs/ClientApp/src/app/thread/thread-container.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IThread } from './thread';\nimport { ThreadService } from './thread.service';\nimport { AuthenticationService } from '../authentication.service'; // Import your authentication service\n\n@Component({\n  selector: 'app-thread-container',\n  templateUrl: './thread-container.component.html',\n  styleUrls: ['./thread-container.component.css']\n})\n\nexport class ThreadContainerComponent implements OnInit {\n  thread: IThread | null = null;\n  isAuthenticated: boolean = false; // Variable to track authentication status\n\n  constructor(\n    private _route: ActivatedRoute,\n    private _router: Router,\n    private _threadService: ThreadService,\n    private _authService: AuthenticationService // Inject authentication service\n  ) { }\n\n  getThreadData(id: number): void {\n    this._threadService.getThreadById(+id).subscribe(\n      data => {\n        this.thread = data;\n      },\n      error => {\n        console.error('Error fetching thread:', error);\n        this._router.navigate(['/']);\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    this.isAuthenticated = this._authService.isAuthenticated(); // Check authentication status\n\n    this._route.paramMap.subscribe(params => {\n      const id = params.get('id');\n      if (id) {\n        this.getThreadData(+id);\n      } else {\n        console.error('Thread ID is missing');\n        this._router.navigate(['/']);\n      }\n    });\n  }\n\n  // Methods to handle editing and deleting the thread\n  editThread(): void {\n    // Implement the logic to edit the thread\n    console.log(\"Edit thread functionality goes here.\");\n  }\n\n  deleteThread(): void {\n    // Implement the logic to delete the thread\n    console.log(\"Delete thread functionality goes here.\");\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}