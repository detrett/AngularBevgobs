{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./thread.service\";\nconst _c0 = function (a1) {\n  return [\"/subforum\", a1];\n};\nexport class ThreadContainerComponent {\n  constructor(_route, _router, _threadService) {\n    this._route = _route;\n    this._router = _router;\n    this._threadService = _threadService;\n    this.thread = null;\n  }\n  getThreadData(id) {\n    console.log(\"Thread Container Component: getThreadData()\");\n    this._threadService.getThreadById(+id).subscribe(data => {\n      this.thread = data;\n      console.log(\"Thread Name: \" + this.thread?.Name);\n      console.log(\"Total Comments: \" + this.thread?.Comments.length);\n    }, error => {\n      console.error('Error fetching subforum:', error);\n      this._router.navigate(['/']);\n    });\n  }\n  ngOnInit() {\n    console.log(\"Thread Container Component: ngOnInit()\");\n    this._route.paramMap.subscribe(params => {\n      const id = params.get('id');\n      if (id != null) {\n        this.getThreadData(+id);\n      } else {\n        console.error('Error fetching id');\n        this._router.navigate(['/']);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function ThreadContainerComponent_Factory(t) {\n    return new (t || ThreadContainerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ThreadService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ThreadContainerComponent,\n    selectors: [[\"app-thread-container\"]],\n    decls: 20,\n    vars: 8,\n    consts: [[1, \"row\"], [\"id\", \"title\", 1, \"col\"], [1, \"title-font\"], [1, \"pager-container\", \"topic-listing-link\", \"mt-4\"], [3, \"routerLink\"], [1, \"fa-solid\", \"fa-chevron-left\"], [1, \"\"], [1, \"thread-container\", \"background-dark\", \"card\", \"row\"], [1, \"d-inline-flex\"], [1, \"thread-page-title\"], [1, \"teaser-background\", \"card\", \"comment-container\", \"guest-only\"], [1, \"pager-container\", \"topic-listing-link\"], [\"href\", \"\", \"id\", \"back-to-top-button\", \"data-bs-toggle\", \"tooltip\", \"title\", \"Back to top\"]],\n    template: function ThreadContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"a\", 4);\n        i0.ɵɵelement(6, \"i\", 5);\n        i0.ɵɵtext(7, \" Go back to topic listing \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"section\", 6)(9, \"div\", 7)(10, \"div\", 8)(11, \"h2\", 9);\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(13, \"section\", 10);\n        i0.ɵɵtext(14, \" } } \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 11)(16, \"a\", 4);\n        i0.ɵɵelement(17, \"i\", 5);\n        i0.ɵɵtext(18, \" Go back to topic listing \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(19, \"a\", 12);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.thread == null ? null : ctx.thread.ParentId);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(4, _c0, ctx.thread == null ? null : ctx.thread.ParentId));\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate(ctx.thread == null ? null : ctx.thread.Name);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(6, _c0, ctx.thread == null ? null : ctx.thread.ParentId));\n      }\n    },\n    styles: [\"body[_ngcontent-%COMP%] {\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGhyZWFkL3RocmVhZC1jb250YWluZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiYm9keSB7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;AAWA,OAAM,MAAOA,wBAAwB;EAEnCC,YACUC,MAAsB,EACtBC,OAAe,EACfC,cAA6B;IAF7B,WAAM,GAANF,MAAM;IACN,YAAO,GAAPC,OAAO;IACP,mBAAc,GAAdC,cAAc;IAJxB,WAAM,GAAmB,IAAI;EAIc;EAE3CC,aAAa,CAACC,EAAU;IACtBC,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;IAC1D,IAAI,CAACJ,cAAc,CAACK,aAAa,CAAC,CAACH,EAAE,CAAC,CAACI,SAAS,CAC9CC,IAAI,IAAG;MACL,IAAI,CAACC,MAAM,GAAGD,IAAI;MAClBJ,OAAO,CAACC,GAAG,CAAC,eAAe,GAAG,IAAI,CAACI,MAAM,EAAEC,IAAI,CAAC;MAChDN,OAAO,CAACC,GAAG,CAAC,kBAAkB,GAAG,IAAI,CAACI,MAAM,EAAEE,QAAQ,CAACC,MAAM,CAAC;IAChE,CAAC,EACDC,KAAK,IAAG;MACNT,OAAO,CAACS,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,IAAI,CAACb,OAAO,CAACc,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC,CACF;EACH;EAEAC,QAAQ;IACNX,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;IAErD,IAAI,CAACN,MAAM,CAACiB,QAAQ,CAACT,SAAS,CAACU,MAAM,IAAG;MACtC,MAAMd,EAAE,GAAGc,MAAM,CAACC,GAAG,CAAC,IAAI,CAAC;MAE3B,IAAIf,EAAE,IAAI,IAAI,EAAE;QACd,IAAI,CAACD,aAAa,CAAC,CAACC,EAAE,CAAC;OACxB,MAAM;QACLC,OAAO,CAACS,KAAK,CAAC,mBAAmB,CAAC;QAClC,IAAI,CAACb,OAAO,CAACc,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;;IAEhC,CAAC,CAAC;EACJ;EAAC;qBAnCUjB,wBAAwB;EAAA;EAAA;UAAxBA,wBAAwB;IAAAsB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCVrCC,8BAAiB;QAEUA,YAAoB;QAAAA,iBAAK;QAKpDA,8BAAqD;QAEjDA,uBAAwC;QAACA,0CAC3C;QAAAA,iBAAI;QAINA,kCAAkB;QAKkBA,aAAgB;QAAAA,iBAAK;QAgDrDA,+BAIU;QAEVA,sBAGF;QAAAA,iBAAM;QAIRA,gCAAgD;QAE5CA,wBAAwC;QAACA,2CAC3C;QAAAA,iBAAI;QAuDNA,yBAAoF;;;QAxIzDA,eAAoB;QAApBA,qEAAoB;QAM1CA,eAA8C;QAA9CA,wGAA8C;QAWfA,eAAgB;QAAhBA,iEAAgB;QA8D/CA,eAA8C;QAA9CA,wGAA8C","names":["ThreadContainerComponent","constructor","_route","_router","_threadService","getThreadData","id","console","log","getThreadById","subscribe","data","thread","Name","Comments","length","error","navigate","ngOnInit","paramMap","params","get","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/brageeilertsen/RiderProjects/AngularBevgobs1/AngularBevgobs/ClientApp/src/app/thread/thread-container.component.ts","/Users/brageeilertsen/RiderProjects/AngularBevgobs1/AngularBevgobs/ClientApp/src/app/thread/thread-container.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IThread } from './thread';\nimport { ThreadService } from './thread.service';\n\n@Component({\n  selector: 'app-thread-container',\n  templateUrl: './thread-container.component.html',\n  styleUrls: ['./thread-container.component.css']\n})\n\nexport class ThreadContainerComponent implements OnInit {\n  thread: IThread | null = null;\n  constructor(\n    private _route: ActivatedRoute,\n    private _router: Router,\n    private _threadService: ThreadService) { }\n\n  getThreadData(id: number): void {\n    console.log(\"Thread Container Component: getThreadData()\");\n    this._threadService.getThreadById(+id).subscribe(\n      data => {\n        this.thread = data;\n        console.log(\"Thread Name: \" + this.thread?.Name);\n        console.log(\"Total Comments: \" + this.thread?.Comments.length);\n      },\n      error => {\n        console.error('Error fetching subforum:', error);\n        this._router.navigate(['/']);\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    console.log(\"Thread Container Component: ngOnInit()\");\n\n    this._route.paramMap.subscribe(params => {\n      const id = params.get('id');\n\n      if (id != null) {\n        this.getThreadData(+id);\n      } else {\n        console.error('Error fetching id');\n        this._router.navigate(['/']);\n      }\n    });\n  }\n}\n","<!--Subforum Title-->\n<div class=\"row\">\n  <div class=\"col\" id=\"title\">\n    <h1 class=\"title-font\">{{thread?.ParentId}}</h1>\n  </div>\n</div>\n\n<!--Go back to thread list-->\n<div class=\"pager-container topic-listing-link mt-4\">\n  <a [routerLink]=\"['/subforum', thread?.ParentId]\">\n    <i class=\"fa-solid fa-chevron-left\"></i> Go back to topic listing\n  </a>\n</div>\n\n<!--Start of Thread Container-->\n<section class=\"\">\n  <div class=\"thread-container background-dark card row\">\n\n    <!--Thread title-->\n    <div class=\"d-inline-flex\">\n      <h2 class=\"thread-page-title\">{{thread?.Name}}</h2>\n\n      <!--@{\n      if (User.Identity.IsAuthenticated)\n      {\n      if (Model.UserId.ToString() == userId || currentUser.Rank == \"Mod\" || currentUser.Rank == \"Admin\")\n      {\n      <button type=\"button\" class=\"btn card-body std-purple-btn\" data-bs-keyboard=\"false\" data-bs-backdrop=\"static\" data-bs-toggle=\"modal\"\n              data-bs-target=\"#editThread\" id=\"editThreadBtn\">\n        <i class=\"fa-solid fa-file-pen\"></i>\n        Edit Topic\n      </button>\n      }\n      if (Model.UserId.ToString() == userId || currentUser.Rank == \"Mod\" || currentUser.Rank == \"Admin\")\n      {\n      <button type=\"button\" class=\"btn card-body std-pink-btn\" data-bs-keyboard=\"false\" data-bs-backdrop=\"static\" data-bs-toggle=\"modal\"\n              data-bs-target=\"#deleteThread\" id=\"deleteThreadBtn\">\n        <i class=\"fa-solid fa-trash\"></i>\n        Delete\n      </button>\n      }\n      }\n\n      }-->\n    </div>\n\n    <!--@{\n    foreach (var comment in Model.Comments)\n    {\n    @await Html.PartialAsync(\"_CommentList\", comment);\n    }\n    }\n    @{\n    System.Diagnostics.Debug.Assert(User.Identity != null, \"User.Identity != null\");\n    if (User.Identity.IsAuthenticated)\n    {\n\n    var newComment = new Comment();\n    newComment.Thread = Model;\n    newComment.ThreadId = Model.ThreadId;\n    newComment.Title = Model.Name;\n\n    @await Html.PartialAsync(\"_CommentBox\", newComment);\n\n    }\n    else\n    {-->\n    <!--guest teaser (guest only)-->\n    <section class=\"teaser-background card comment-container guest-only\">\n\n      <!--@await Html.PartialAsync(\"_GuestTeaser\")-->\n\n    </section>\n    <!--end of guest teaser (guest only)-->\n    }\n    }\n\n  </div>\n</section>\n<!--End of Thread Container-->\n<!--Go back to thread list-->\n<div class=\"pager-container topic-listing-link\">\n  <a [routerLink]=\"['/subforum', thread?.ParentId]\">\n    <i class=\"fa-solid fa-chevron-left\"></i> Go back to topic listing\n  </a>\n</div>\n\n<!-- Edit Thread Modal -->\n<!--<div class=\"modal fade\" id=\"editThread\" tabindex=\"-1\" aria-labelledby=\"editThreadLabel\" aria-hidden=\"true\" role=\"dialog\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\">\n  <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title fs-5 modal-font\" id=\"editThreadLabel\">Edit topic</h1>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n      </div>\n      @{\n      var editThread = Model;\n      }\n      @await Html.PartialAsync(\"_EditThreadModal\", @editThread);\n\n    </div>\n  </div>\n</div>-->\n\n<!-- Deleting thread Modal -->\n<!--<div class=\"modal fade\" id=\"deleteThread\" tabindex=\"-1\" aria-labelledby=\"deleteThreadLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-dialog-centered\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header fd-column\">\n        <div>\n          <span class=\"circle-icon\">\n            <i class=\"fa-solid fa-triangle-exclamation fa-2xl\"></i>\n          </span>\n\n        </div>\n        <div>\n          <h1 class=\"modal-title fs-5 modal-font\" id=\"deleteModalLabel\">Are you sure?</h1>\n\n        </div>\n      </div>\n      <div class=\"modal-body text-center\">\n        <h2 class=\"modal-subtitle mt-2\">This action cannot be undone.</h2>\n        <h3 class=\"modal-subtitle mb-5\">The content of your topic: <i>\"@Model.Name\"</i> will be lost forever.</h3>\n\n\n        <div>\n          <form asp-controller=\"Thread\" asp-action=\"DeleteConfirmed\" asp-route-id=\"@Model.ThreadId\" method=\"post\">\n            <button type=\"submit\" class=\"mb-3 std-pink-btn w-75\">Delete</button>\n          </form>\n        </div>\n        <div>\n          <button type=\"button\" class=\"mb-4 std-purple-btn w-75\" data-bs-dismiss=\"modal\" aria-label=\"Close\">Cancel</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>-->\n\n<!--Back to top button-->\n<a href=\"\" id=\"back-to-top-button\" data-bs-toggle=\"tooltip\" title=\"Back to top\"></a>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}