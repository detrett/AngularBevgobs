{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./thread.service\";\nimport * as i3 from \"src/app/services/authentication.service\";\nimport * as i4 from \"@angular/common\";\nfunction ThreadContainerComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function ThreadContainerComponent_div_13_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.editThread());\n    });\n    i0.ɵɵtext(2, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function ThreadContainerComponent_div_13_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deleteThread());\n    });\n    i0.ɵɵtext(4, \"Delete\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ThreadContainerComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-comment-list\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const comment_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"comment\", comment_r7);\n  }\n}\nfunction ThreadContainerComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-comment-box\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"thread\", ctx_r2.thread);\n  }\n}\nfunction ThreadContainerComponent_section_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"section\", 21);\n  }\n}\nconst _c0 = function (a1) {\n  return [\"/subforum\", a1];\n};\nexport class ThreadContainerComponent {\n  constructor(_route, _router, _threadService, _authService) {\n    this._route = _route;\n    this._router = _router;\n    this._threadService = _threadService;\n    this._authService = _authService;\n    this.thread = null;\n    this.isAuthenticated = false;\n  }\n  ngOnInit() {\n    this.isAuthenticated = this._authService.isAuthenticated();\n    this._route.paramMap.subscribe(params => {\n      const id = params.get('id');\n      if (id) {\n        this.getThreadData(+id);\n      } else {\n        console.error('Thread ID is missing');\n        this._router.navigate(['/']);\n      }\n    });\n  }\n  getThreadData(id) {\n    this._threadService.getThreadById(+id).subscribe(data => {\n      this.thread = data;\n    }, error => {\n      console.error('Error fetching thread:', error);\n      this._router.navigate(['/']);\n    });\n  }\n  editThread() {\n    if (this.thread && this.thread.ThreadId) {\n      this._router.navigate(['/edit-thread', this.thread.ThreadId]);\n    } else {\n      console.error('Thread data is missing');\n    }\n  }\n  deleteThread() {\n    if (this.thread && this.thread.ThreadId) {\n      if (confirm('Are you sure you want to delete this thread?')) {\n        this._threadService.deleteThread(this.thread.ThreadId).subscribe({\n          next: () => {\n            console.log('Thread deleted successfully');\n            this._router.navigate(['/']);\n          },\n          error: err => console.error('Error deleting thread:', err)\n        });\n      }\n    } else {\n      console.error('Thread data is missing');\n    }\n  }\n  static #_ = this.ɵfac = function ThreadContainerComponent_Factory(t) {\n    return new (t || ThreadContainerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ThreadService), i0.ɵɵdirectiveInject(i3.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ThreadContainerComponent,\n    selectors: [[\"app-thread-container\"]],\n    decls: 25,\n    vars: 12,\n    consts: [[1, \"row\"], [\"id\", \"title\", 1, \"col\"], [1, \"title-font\"], [1, \"pager-container\", \"topic-listing-link\", \"mt-4\"], [3, \"routerLink\"], [1, \"fa-solid\", \"fa-chevron-left\"], [1, \"thread-container\", \"background-dark\", \"card\", \"row\"], [1, \"d-inline-flex\", \"align-items-center\"], [1, \"thread-page-title\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"teaser-background card comment-container\", 4, \"ngIf\"], [1, \"pager-container\", \"topic-listing-link\"], [\"id\", \"editThreadModal\", 1, \"modal\"], [\"id\", \"deleteThreadModal\", 1, \"modal\"], [\"href\", \"#\", \"id\", \"back-to-top-button\", \"data-bs-toggle\", \"tooltip\", \"title\", \"Back to top\"], [1, \"fa-solid\", \"fa-arrow-up\"], [1, \"btn\", \"btn-primary\", \"ms-2\", 3, \"click\"], [1, \"btn\", \"btn-danger\", \"ms-2\", 3, \"click\"], [3, \"comment\"], [3, \"thread\"], [1, \"teaser-background\", \"card\", \"comment-container\"]],\n    template: function ThreadContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"a\", 4);\n        i0.ɵɵelement(6, \"i\", 5);\n        i0.ɵɵtext(7, \" Go back to topic listing \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"section\")(9, \"div\", 6)(10, \"div\", 7)(11, \"h2\", 8);\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, ThreadContainerComponent_div_13_Template, 5, 0, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, ThreadContainerComponent_div_14_Template, 2, 1, \"div\", 10);\n        i0.ɵɵtemplate(15, ThreadContainerComponent_div_15_Template, 2, 1, \"div\", 9);\n        i0.ɵɵtemplate(16, ThreadContainerComponent_section_16_Template, 1, 0, \"section\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"div\", 12)(18, \"a\", 4);\n        i0.ɵɵelement(19, \"i\", 5);\n        i0.ɵɵtext(20, \" Go back to topic listing \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(21, \"div\", 13)(22, \"div\", 14);\n        i0.ɵɵelementStart(23, \"a\", 15);\n        i0.ɵɵelement(24, \"i\", 16);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.thread == null ? null : ctx.thread.ParentId);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(8, _c0, ctx.thread == null ? null : ctx.thread.ParentId));\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate(ctx.thread == null ? null : ctx.thread.Name);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isAuthenticated);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.thread == null ? null : ctx.thread.Comments);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isAuthenticated);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isAuthenticated);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(10, _c0, ctx.thread == null ? null : ctx.thread.ParentId));\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i1.RouterLink],\n    styles: [\"body[_ngcontent-%COMP%] {\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGhyZWFkL3RocmVhZC1jb250YWluZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiYm9keSB7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","ThreadContainerComponent","constructor","_route","_router","_threadService","_authService","ngOnInit","isAuthenticated","paramMap","subscribe","params","id","get","getThreadData","console","error","navigate","getThreadById","data","thread","editThread","ThreadId","deleteThread","confirm","next","log","err","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/brageeilertsen/RiderProjects/AngularBevgobs1/AngularBevgobs/ClientApp/src/app/thread/thread-container.component.html","/Users/brageeilertsen/RiderProjects/AngularBevgobs1/AngularBevgobs/ClientApp/src/app/thread/thread-container.component.ts"],"sourcesContent":["<!-- Subforum Title -->\n<div class=\"row\">\n  <div class=\"col\" id=\"title\">\n    <h1 class=\"title-font\">{{thread?.ParentId}}</h1>\n  </div>\n</div>\n\n<!-- Go back to thread list -->\n<div class=\"pager-container topic-listing-link mt-4\">\n  <a [routerLink]=\"['/subforum', thread?.ParentId]\">\n    <i class=\"fa-solid fa-chevron-left\"></i> Go back to topic listing\n  </a>\n</div>\n\n<!-- Start of Thread Container -->\n<section>\n  <div class=\"thread-container background-dark card row\">\n    <!-- Thread title -->\n    <div class=\"d-inline-flex align-items-center\">\n      <h2 class=\"thread-page-title\">{{thread?.Name}}</h2>\n      <div *ngIf=\"isAuthenticated\">\n        <!-- Edit Button -->\n        <button (click)=\"editThread()\" class=\"btn btn-primary ms-2\">Edit</button>\n        <!-- Delete Button -->\n        <button (click)=\"deleteThread()\" class=\"btn btn-danger ms-2\">Delete</button>\n      </div>\n    </div>\n\n    <!-- Comments Section -->\n    <div *ngFor=\"let comment of thread?.Comments\">\n      <app-comment-list [comment]=\"comment\"></app-comment-list>\n    </div>\n\n    <!-- Comment Box for Authenticated Users -->\n    <div *ngIf=\"isAuthenticated\">\n      <app-comment-box [thread]=\"thread\"></app-comment-box>\n    </div>\n\n    <!-- Guest Teaser for Unauthenticated Users -->\n    <section class=\"teaser-background card comment-container\" *ngIf=\"!isAuthenticated\">\n      <!-- Guest Teaser Content Here -->\n    </section>\n  </div>\n</section>\n<!-- End of Thread Container -->\n\n<!-- Go back to thread list -->\n<div class=\"pager-container topic-listing-link\">\n  <a [routerLink]=\"['/subforum', thread?.ParentId]\">\n    <i class=\"fa-solid fa-chevron-left\"></i> Go back to topic listing\n  </a>\n</div>\n\n<!-- Modals for Editing and Deleting Threads -->\n<!-- Edit Thread Modal -->\n<div class=\"modal\" id=\"editThreadModal\">\n  <!-- Your Edit Modal HTML Here -->\n</div>\n\n<!-- Delete Thread Modal -->\n<div class=\"modal\" id=\"deleteThreadModal\">\n  <!-- Your Delete Modal HTML Here -->\n</div>\n\n<!-- Back to Top Button -->\n<a href=\"#\" id=\"back-to-top-button\" data-bs-toggle=\"tooltip\" title=\"Back to top\">\n  <i class=\"fa-solid fa-arrow-up\"></i>\n</a>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IThread } from './thread';\nimport { ThreadService } from './thread.service';\nimport { AuthService } from 'src/app/services/authentication.service';\n\n@Component({\n  selector: 'app-thread-container',\n  templateUrl: './thread-container.component.html',\n  styleUrls: ['./thread-container.component.css']\n})\nexport class ThreadContainerComponent implements OnInit {\n  thread: IThread | null = null;\n  isAuthenticated: boolean = false;\n\n  constructor(\n    private _route: ActivatedRoute,\n    private _router: Router,\n    private _threadService: ThreadService,\n    private _authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.isAuthenticated = this._authService.isAuthenticated();\n\n    this._route.paramMap.subscribe(params => {\n      const id = params.get('id');\n      if (id) {\n        this.getThreadData(+id);\n      } else {\n        console.error('Thread ID is missing');\n        this._router.navigate(['/']);\n      }\n    });\n  }\n\n  getThreadData(id: number): void {\n    this._threadService.getThreadById(+id).subscribe(\n      data => {\n        this.thread = data;\n      },\n      error => {\n        console.error('Error fetching thread:', error);\n        this._router.navigate(['/']);\n      }\n    );\n  }\n\n  editThread(): void {\n    if (this.thread && this.thread.ThreadId) {\n      this._router.navigate(['/edit-thread', this.thread.ThreadId]);\n    } else {\n      console.error('Thread data is missing');\n    }\n  }\n\n  deleteThread(): void {\n    if (this.thread && this.thread.ThreadId) {\n      if (confirm('Are you sure you want to delete this thread?')) {\n        this._threadService.deleteThread(this.thread.ThreadId).subscribe({\n          next: () => {\n            console.log('Thread deleted successfully');\n            this._router.navigate(['/']);\n          },\n          error: err => console.error('Error deleting thread:', err)\n        });\n      }\n    } else {\n      console.error('Thread data is missing');\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}